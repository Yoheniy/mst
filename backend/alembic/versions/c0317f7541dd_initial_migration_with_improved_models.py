"""Initial migration with improved models

Revision ID: c0317f7541dd
Revises: 
Create Date: 2025-08-30 01:21:00.677346

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c0317f7541dd'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('error_codes',
    sa.Column('error_code_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('manufacturer_origin', sa.Enum('MACHINE', 'CHILLER', 'LASER_SOURCE', 'DRIVE', 'CONTROLLER', 'SOFTWARE', 'OTHER', name='manufacturerorigin'), nullable=True),
    sa.Column('severity', sa.Enum('MINOR', 'WARNING', 'CRITICAL', name='errorseverity'), nullable=True),
    sa.Column('suggested_action', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('error_code_id')
    )
    op.create_index(op.f('ix_error_codes_code'), 'error_codes', ['code'], unique=True)
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('role', sa.Enum('CUSTOMER', 'ADMIN', 'TECHNICIAN', 'SALES_AGENT', name='userrole'), nullable=False),
    sa.Column('employee_id', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('knowledge_base_contents',
    sa.Column('kb_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content_type', sa.Enum('DOCUMENT', 'FAQ', 'TROUBLESHOOTING_GUIDE', 'VIDEO', 'TUTORIAL', 'ERROR_GUIDE', name='contenttype'), nullable=False),
    sa.Column('content_text', sa.Text(), nullable=True),
    sa.Column('external_url', sa.String(length=500), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('applies_to_models', sa.JSON(), nullable=True),
    sa.Column('uploader_id', sa.Integer(), nullable=False),
    sa.Column('related_error_code_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['related_error_code_id'], ['error_codes.error_code_id'], ),
    sa.ForeignKeyConstraint(['uploader_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('kb_id')
    )
    op.create_table('machines',
    sa.Column('machine_id', sa.Integer(), nullable=False),
    sa.Column('serial_number', sa.String(length=100), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('purchase_date', sa.Date(), nullable=True),
    sa.Column('warranty_end_date', sa.Date(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('machine_id')
    )
    op.create_index(op.f('ix_machines_serial_number'), 'machines', ['serial_number'], unique=True)
    op.create_table('anomaly_reports',
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('reporter_id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=False),
    sa.Column('report_text', sa.Text(), nullable=False),
    sa.Column('media_urls', sa.JSON(), nullable=True),
    sa.Column('audio_transcript', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('SUBMITTED', 'UNDER_REVIEW', 'KB_INCORPORATED', 'CLOSED', name='anomalystatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', name='anomalypriority'), nullable=False),
    sa.Column('observed_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.machine_id'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('report_id')
    )
    op.create_table('tickets',
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'IN_PROGRESS', 'RESOLVED', 'CLOSED', 'ESCALATED', name='ticketstatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='ticketpriority'), nullable=False),
    sa.Column('escalated_to_agent', sa.Boolean(), nullable=False),
    sa.Column('ai_confidence_score', sa.Float(), nullable=True),
    sa.Column('assignee_id', sa.Integer(), nullable=True),
    sa.Column('related_anomaly_report_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.machine_id'], ),
    sa.ForeignKeyConstraint(['related_anomaly_report_id'], ['anomaly_reports.report_id'], ),
    sa.PrimaryKeyConstraint('ticket_id'),
    sa.UniqueConstraint('related_anomaly_report_id')
    )
    op.create_table('chat_conversations',
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('transcript', sa.JSON(), nullable=True),
    sa.Column('final_resolution', sa.Text(), nullable=True),
    sa.Column('was_escalated', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.ticket_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('chat_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('chat_conversations')
    op.drop_table('tickets')
    op.drop_table('anomaly_reports')
    op.drop_index(op.f('ix_machines_serial_number'), table_name='machines')
    op.drop_table('machines')
    op.drop_table('knowledge_base_contents')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_error_codes_code'), table_name='error_codes')
    op.drop_table('error_codes')
    # ### end Alembic commands ###
